<?php

namespace app\modules\frontend\models;

use Yii;
use yii\behaviors\TimestampBehavior;
use yii\db\Expression;
use app\modules\activity\models\PlayerQuestion;
use app\modules\activity\models\PlayerTreasure;
use app\modules\activity\models\SpinQueue;
use app\modules\activity\models\SpinHistory;
use app\modules\activity\models\Report;
use app\modules\activity\models\Stream;
use app\modules\gameplay\models\Hint;
use app\modules\gameplay\models\Finding;
use app\modules\gameplay\models\Treasure;

/**
 * This is the model class for table "player".
 *
 * @property string $authKey
 *
 * @method ban()
 * @method saveWithSsl()
 * @method mail()
 * @method genPassword()
 * @method createTeam()
 *
 */
class Player extends PlayerAR
{

    public function ban()
    {
      $ban=new \app\modules\frontend\models\BannedPlayer;
      $ban->old_id=$this->id;
      $ban->username=$this->username;
      $ban->email=$this->email;
      $ban->registered_at=$this->created;
      $ban->banned_at=new \yii\db\Expression('NOW()');
      if($ban->save() && $this->delete() !== false)
        return true;
      return false;

    }
    /**
     * {@inheritdoc}
     */
    public function getAuthKey()
    {
        return $this->auth_key;
    }

    public function saveWithSsl()
    {
      if(!$this->save())
      {
        return false;
      }

      $playerSsl=new PlayerSsl();
      $playerSsl->player_id=$this->id;
      $playerSsl->generate();
      if($playerSsl->save())
      {
        return $playerSsl->refresh();
      }
      return false;
    }

    public function mail($content, $subject)
    {
      // Get mailer
      try
      {
        \Yii::$app->mailer->compose()
          ->setFrom([\app\modules\settings\models\Sysconfig::findOne('mail_from')->val => \app\modules\settings\models\Sysconfig::findOne('mail_fromName')->val])
          ->setTo([$this->email=>$this->username])
          ->setSubject($subject)
          ->setTextBody($content)
          ->send();
        if (Yii::$app instanceof \yii\web\Application)
          \Yii::$app->session->setFlash('success', "The user has been mailed.");
        else {
          echo "The user has been mailed.\n";
        }
      }
      catch(\Exception $e)
      {
        if (Yii::$app instanceof \yii\web\Application)
          \Yii::$app->session->setFlash('notice', "Failed to send mail to user.");
        else
          echo "Failed to send mail to user.\n";
        return false;
      }
      return true;
  }

  public function genPassword($password)
  {
    if($password === false or $password === '0')
    {

      $password=Yii::$app->security->generateRandomString(8);
      printf("Autogenerated password: %s\n", $password);
    }
    return $password;
  }

  public function createTeam($team_name,$approved)
  {
      if($team_name === false)
        return;

      $team=Team::findOne(['name'=>trim($team_name)]);
      if($team === null)
      {
        $team=new Team();
        $team->name=trim($team_name);
        $team->academic=$this->academic;
        $team->token=Yii::$app->security->generateRandomString(20);
        $team->owner_id=$this->id;
        $team->description=$this->username;
        $team->save(false);
        $ts=new \app\modules\activity\models\TeamScore();
        $ts->team_id=$team->id;
        $ts->points=0;
        $ts->save();
      }
      if(($tp=TeamPlayer::findOne(['team_id'=>$team->id,'player_id'=>$this->id]))===null)
      {
        $tp=new TeamPlayer;
        $tp->player_id=$this->id;
        $tp->team_id=$team->id;
      }

      $tp->approved=intval($approved);
      if($team->owner_id===$this->id)
      {
        $tp->approved=1;
      }

      if(!$tp->save())
        printf("Error saving team player\n");
  }
  public function getAcademicLong()
  {
    return Yii::$app->sys->{"academic_".$this->academic};
  }

  public function getAcademicShort()
  {
    return Yii::$app->sys->{"academic_".$this->academic."short"};
  }

}
